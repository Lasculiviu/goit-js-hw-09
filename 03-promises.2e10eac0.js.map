{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAOF,SAASG,cAAc,SA4BpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,SAASO,EAAiBC,EAAOC,GACzB,iBAAkBC,OAEe,YAA5BC,aAAaC,WACtB,IAAID,aAAaH,EAAO,CAAEK,KAAMJ,IACK,WAA5BE,aAAaC,YACtBD,aAAaG,oBAAoBC,MAAK,SAAUH,GAC3B,YAAfA,GACF,IAAID,aAAaH,EAAO,CAAEK,KAAMJ,G,IANpCO,MAAM,qD,CAzCVpB,EAAKD,iBAAiB,UAAU,SAASsB,GACvCA,EAAMC,iBAEN,IAAMlB,EAAQmB,SAASvB,EAAKwB,SAAgB,MAAEC,OACxCC,EAAOH,SAASvB,EAAKwB,SAAe,KAAEC,QAM9C,SAAwBE,EAAQC,EAAcF,GAG5C,IAFA,IAAIG,EAAeD,EAEVE,EAAI,EAAGA,GAAKH,EAAQG,IAC3B5B,EAAc4B,EAAGD,GACdV,MAAK,SAAAY,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBO,EAAiB,uBAAkCqB,OAAT7B,GAAY,gBAAsB6B,OAAN5B,EAAM,M,IAE7E6B,OAAM,SAAAF,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBO,EAAiB,sBAA+BqB,OAAT7B,GAAY,eAAqB6B,OAAN5B,EAAM,M,IAG5EyB,GAAgBH,C,CAflBQ,CAFeX,SAASvB,EAAKwB,SAAiB,OAAEC,OAEzBrB,EAAOsB,E","sources":["src/js/03-promises.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', function(event) {\n    event.preventDefault();\n\n    const delay = parseInt(form.elements['delay'].value);\n    const step = parseInt(form.elements['step'].value);\n    const amount = parseInt(form.elements['amount'].value);\n\n    createPromises(amount, delay, step);\n  });\n\n  function createPromises(amount, initialDelay, step) {\n    let currentDelay = initialDelay;\n\n    for (let i = 1; i <= amount; i++) {\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          showNotification(`✅ Fulfilled promise ${position}`, `Fulfilled in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          showNotification(`❌ Rejected promise ${position}`, `Rejected in ${delay}ms`);\n        });\n\n      currentDelay += step;\n    }\n  }\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  function showNotification(title, message) {\n    if (!(\"Notification\" in window)) {\n      alert(\"This browser does not support desktop notification\");\n    } else if (Notification.permission === \"granted\") {\n      new Notification(title, { body: message });\n    } else if (Notification.permission !== \"denied\") {\n      Notification.requestPermission().then(function (permission) {\n        if (permission === \"granted\") {\n          new Notification(title, { body: message });\n        }\n      });\n    }\n  }\n});\n"],"names":["document","addEventListener","form","querySelector","createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","showNotification","title","message","window","Notification","permission","body","requestPermission","then","alert","event","preventDefault","parseInt","elements","value","step","amount","initialDelay","currentDelay","i","param","concat","catch","createPromises"],"version":3,"file":"03-promises.2e10eac0.js.map"}